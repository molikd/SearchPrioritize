install.pacakges("reutils")
install.packages("reutils")
??reutils
?egquery
library("reutils")
asn <- download.file("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=KU511222.1&complexity=3")
asn <- download.file("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=KU511222.1&complexity=3","KU511222.1",method="wget")
?reutils
IDs[i]
IDs <- c("KU511222.1")
IDs[1]
i=1
url <- c("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",IDs[i],"&complexity=3")
url <- paste(url,sep="")
urlUse <- paste(url,sep="")
urlUse
urlUse <- paste(url,  collapse="")
library(jsonlite)
jsonExample <- fromJSON(IDs[1])
library(yaml)
?yaml
yaml.load(IDs[1])
yaml <- yaml.load(IDs[1])
yamlExapmle <- yaml.load(IDs[1])
yamlExapmle <- yaml.load_file(IDs[1])
?fromJSON
library(jsonlite)
IDs <- c("KU511222.1")
FileList <- list()
for( i in length(IDs)){
url <- c("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",IDs[i],"&complexity=3&rettype=json&retmode=text")
url <- paste(url,  collapse="")
download.file(url,IDs[i],method="wget")
}
jsonLoadExample <- fromJSON(IDs[1])
efetch
?efetch
efetch(IDs,"nuccore")
efetch(IDs,"nuccore",rettype = "xml")
efetch(IDs,db="nuccore",retmode = "xml")
efetch(IDs,db="nuccore",retmode="text")
library(reutils)
IDs <- c("KU511222.1")
for( i in length(IDs)){
efetch(uid=IDs[i],db="nuccore",retmode="text",outfile = IDs[i])
}
for( i in length(IDs)){
efetch(uid=IDs[i],db="nuccore",retmode="text",outfile = IDs[i])
}
jsonLoadExample <- fromJSON(IDs[1])
library(reutils)
IDs <- c("KU511222.1")
for( i in length(IDs)){
efetch(uid=IDs[i],db="nuccore",retmode="text",outfile = IDs[i])
}
jsonLoadExample <- fromJSON(IDs[1])
i=1
efetch(uid=IDs[i],db="nuccore",retmode="text",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",retmode="xml",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",retmode="asn.1",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",retmode="text",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",rettype="text",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",rettype="docsum",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",rettype="acc",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",rettype="asn.1",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",rettype="asn",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",rettype="text",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",rettype="uilist",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",outfile = IDs[i])
acc <- efetch(uid=IDs[i],db="nuccore",outfile = IDs[i])
for( i in length(IDs)){
url <- c("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",IDs[i],"&complexity=3&retmode=xml")
url <- paste(url,  collapse="")
download.file(url,IDs[i],method="wget")
}
?xml
library(xml)
xml(IDs[i])
xmlTreeParse(IDs[i])
library(XML)
xmlTreeParse(IDs[i])
exampleXML <- xmlTreeParse(IDs[i])
View(exampleXML)
exampleXML[["doc"]]
exampleXML[["doc"]]
library(xml2)
IDs <- c("KU511222.1")
FileList <- list()
for( i in length(IDs)){
url <- c("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",IDs[i],"&complexity=3&retmode=xml")
url <- paste(url,  collapse="")
download.file(url,IDs[i],method="wget")
}
?xml2
??xml2
xmlToList(XML)
XML <- xmlTreeParse(IDs[i])
xmlToList(XML)
xmlData <- xmlToList(file)
file <- xmlTreeParse(IDs[i])
xmlData <- xmlToList(file)
View(xmlData)
xmlData[[37]][["GBFeature"]][["GBFeature_quals"]]
xmlData[[37]][["GBFeature"]][["GBFeature_quals"]][[12]]
xmlData[[37]][["GBFeature"]][["GBFeature_quals"]]
xmlData[["GBFeature"]][["GBFeature_quals"]]
xmlData[[37]][["GBFeature"]][["GBFeature_quals"]]
xmlData[[37]][["GBFeature"]][["GBFeature_quals"]][[12]]
# Here is some code do download a list of acc as xml files
IDs <- c("AH005269")
for( i in length(IDs)){
url <- c("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",IDs[i],"&complexity=3&retmode=xml")
url <- paste(url,  collapse="")
download.file(url,IDs[i],method="wget")
}
# here is how you load an xml file and parse it into a list
file <- xmlTreeParse(IDs[1])
xmlData2 <- xmlToList(file)
# here is how you load an xml file and parse it into a list
file <- xmlTreeParse(IDs[1])
# here is how you load an xml file and parse it into a list
file <- xmlTreeParse(IDs[1])
# Here is some code do download a list of acc as xml files
IDs <- c("M80343.1")
for( i in length(IDs)){
url <- c("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",IDs[i],"&complexity=3&retmode=xml")
url <- paste(url,  collapse="")
download.file(url,IDs[i],method="wget")
}
# here is how you load an xml file and parse it into a list
file <- xmlTreeParse(IDs[1])
# this is the only external library I use
library(XML)
# Here is some code do download a list of acc as xml files
IDs <- c("M80343.1")
for( i in length(IDs)){
url <- c("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",IDs[i],"&complexity=3&retmode=xml")
url <- paste(url,  collapse="")
download.file(url,IDs[i],method="wget")
}
# here is how you load an xml file and parse it into a list
file <- xmlTreeParse(IDs[1])
xmlData2 <- xmlToList(file)
xmlData2 <- xmlToList(file)
XML::xpathSApply(file, "//LineageEx/Taxon/ScientificName", XML::xmlValue)
??xpathSApply
getNodeSet(file, "//LineageEx/Taxon/ScientificName", XML::xmlValue)
# this is the only external library I use
library(XML)
# Here is some code do download a list of acc as xml files
IDs <- c("M80343.1")
for( i in length(IDs)){
url <- c("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",IDs[i],"&complexity=3&retmode=xml")
url <- paste(url,  collapse="")
download.file(url,IDs[i],method="wget")
}
# here is how you load an xml file and parse it into a list
file <- xmlTreeParse(IDs[1])
getNodeSet(file, "//LineageEx/Taxon/ScientificName", XML::xmlValue)
# Here is some code do download a list of acc as xml files
IDs <- c("KU511222.1")
for( i in length(IDs)){
url <- c("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",IDs[i],"&complexity=3&retmode=xml")
url <- paste(url,  collapse="")
download.file(url,IDs[i],method="wget")
}
# here is how you load an xml file and parse it into a list
file <- xmlTreeParse(IDs[1])
getNodeSet(file, "//LineageEx/Taxon/ScientificName", XML::xmlValue)
?XMLDocument
??XMLDocument
source("http://bioconductor.org/biocLite.R")
biocLite(c("annotate", "AnnotationHub", "biomaRt", "DESeq2", "gage", "gageData", "GO.db", "pathview", "plotly", "DT"))
q()
mrpp
?mrpp
??mrppp
?deconstand
??deconstand
library(ggplot2)
??classify_emotion
??
simple_sentiment
??simple_sentiment
?simple_sentiment
??simple_sentiment
devtools::install_github("naikai/sake")
devtools::install_github("naikai/sake", force=TRUE)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2", version = "3.8")
source("http://bioconductor.org/biocLite.R")
biocLite(c("annotate", "AnnotationHub", "biomaRt", "DESeq2", "gage", "gageData", "GO.db", "pathview", "plotly", "DT"))
install.packages("devtools")
install.packages("lgit2")
install.packages("lgit2")
install.packages("devtools")
devtools::install_github("renozao/pkgmaker", ref="develop")
devtools::install_github("naikai/sake")
devtools::install_github("renozao/pkgmaker", ref="develop")
devtools::install_github("naikai/sake")
??github
?install_github
install_github("naikai/sake")
library("devtools")
install_github("naikai/sake")
cite(textrank)
cite("textrank")
cite(nmf)
cite("nmf")
citation("nmf")
citation("NMF")
?udpipe
??udpipe
citation("udpipe")
citation("textreuse")
citation("factoextra")
citation("NMF")
citation("NMF",bibtex=TRUE)
citation("tm")
toBibtex(citation("tm"))
toBibtex(citation("vegan"))
library("dada2")
install.packages("dada2")
install.packages("dada2")
library(plyr)
library(ggplot2)
library(wordcloud)
library(RColorBrewer)
library(SnowballC)
library(sentiment)
library(textreuse)
library(yyplot)
library("devtools")
install_github("https://github.com/GuangchuangYu/yyplot")
install.packages("ggtree")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
install.packages("ape")
library(basicPackages)
basicPackages::install.yyplot()
install.packages("basicPackages")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
install_github("https://github.com/GuangchuangYu/yyplot")
githubinstall::githubinstall("gglayer")
install_github("https://github.com/GuangchuangYu/gglayer")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
install_github("https://github.com/GuangchuangYu/gglayer")
install_github("https://github.com/GuangchuangYu/yyplot")
?install_github
install_github("https://github.com/GuangchuangYu/yyplot", force=T)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
install_github("https://github.com/GuangchuangYu/yyplot", force=T)
?pcd
??pdc
install.packages("pdc")
data("complex.shapes",package="pdc")
View(complex.shapes)
sp_genome_results <- read.table("results_2_Insecta.txt", as.is=TRUE, header=FALSE)
setwd("~/OneDrive - nd.edu/Code/SearchPrioritize/Results_of_Search")
sp_genome_results <- read.table("results_2_Insecta.txt", as.is=TRUE, header=FALSE)
sp_genome_results.nz <- sp_genome_results[sp_genome_results$V3!=0,]
plot(density(sp_genome_results.nz$V3))
plot(sp_genome_results.nz[order(-sp_genome_results.nz$V3),]$V3)
sp_pubmed_results <- read.table("results_3_Insecta.txt", as.is=TRUE, header=FALSE)
sp_pubmed_results.nz <- sp_pubmed_results[sp_pubmed_results$V3!=0,]
plot(density(sp_pubmed_results.nz$V3))
sp_pubmed_results.nz.lt20 <- sp_pubmed_results.nz[sp_pubmed_results.nz$V3<20,]
plot(density(sp_pubmed_results.nz.lt20$V3))
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3)
sp_genome_results <- read.table("results_2_Insecta.txt", as.is=TRUE, header=FALSE)
sp_genome_results.nz <- sp_genome_results[sp_genome_results$V3!=0,]
plot(density(sp_genome_results.nz$V3))
plot(sp_genome_results.nz[order(-sp_genome_results.nz$V3),]$V3)
sp_pubmed_results <- read.table("results_3_Insecta.txt", as.is=TRUE, header=FALSE)
sp_pubmed_results.nz <- sp_pubmed_results[sp_pubmed_results$V3!=0,]
plot(density(sp_pubmed_results.nz$V3))
sp_pubmed_results.nz.lt20 <- sp_pubmed_results.nz[sp_pubmed_results.nz$V3<20,]
plot(density(sp_pubmed_results.nz.lt20$V3))
mean(sp_pubmed_results[sp_pubmed_results$V3])
?mean
mean(sp_pubmed_results$V3)
mean(sp_pubmed_results[sp_pubmed_results$V3!=0,])$V3
mean(sp_pubmed_results[sp_pubmed_results$V3!=0,])$V3)
mean(sp_pubmed_results[sp_pubmed_results$V3!=0,]$V3)
?mode
mode(sp_pubmed_results[sp_pubmed_results$V3!=0,]$V3)
x <- mode(sp_pubmed_results[sp_pubmed_results$V3!=0,]$V3)
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3)
sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]
plot(density(sp_pubmed_results.nz$V3, bw = 0.05))
plot(density(sp_pubmed_results.nz$V3, bw = 1))
plot(density(sp_pubmed_results.nz$V3, bw = 10))
plot(density(sp_pubmed_results.nz$V3))
plot(density(sp_pubmed_results.nz.lt20$V3, bw=.5))
plot(density(sp_pubmed_results.nz.lt20$V3, bw=.55))
plot(density(sp_pubmed_results.nz.lt20$V3, bw=1))
plot(density(sp_pubmed_results.nz.lt20$V3, bw=.55))
plot(density(sp_pubmed_results.nz.lt20$V3, bw=.5))
plot(density(sp_pubmed_results.nz.lt20$V3, bw=.5), main="Density of Non-Zero, Less Than 20 Pubmed")
library(lattice)
densityplot(~ V3, data = sp_pubmed_results.nz.lt20)
?densityplot
densityplot(~ V3, data = sp_pubmed_results.nz.lt20, equal.widths=T)
densityplot(~ V3, data = sp_pubmed_results.nz.lt20, bw=.55)
densityplot(~ V3, data = sp_pubmed_results.nz.lt20, bw=.5)
plot(density(sp_pubmed_results.nz.lt20$V3, bw=.5), main="Density of Non-Zero, Less Than 20 Pubmed")
polygon(d, col="red", border="blue")
pubmed.density <- density(sp_pubmed_results.nz.lt20$V3, bw=.5)
plot(pubmed.density, bw=.5), main="Density of Non-Zero, Less Than 20 Pubmed")
plot(pubmed.density, main="Density of Non-Zero, Less Than 20 Pubmed")
polygon(pubmed.density, col="red", border="black")
plot(pubmed.density, main="Density of Non-Zero, Less Than 20 Pubmed")
polygon(pubmed.density, col="red")
pastel.colors
?pastel.colors
??pastel.colors
library("RPMG")
install.packages("RPMG")
pastel.colors(num, seed=0)
pastel.colors(1), seed=0)
install.packages("RPMG")
library("RPMG")
pastel.colors(1, seed=0)
polygon(pubmed.density, col=pastel.colors(1, seed=0))
polygon(pubmed.density, col=pastel.colors(1, seed=1))
polygon(pubmed.density, col=pastel.colors(1, seed=2))
polygon(pubmed.density, col=pastel.colors(1, seed=1))
?RPMG
polygon(pubmed.density, col="steelblue")
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3)
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3)
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3)
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3, ylim=5000)
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3, ylim=c(0:5000))
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3, xlim=c(100,700))
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3)
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3,ylim=c(0,30))
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3,ylim=c(0,5000))
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3,ylim=c(0,5000), breaks = 1)
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3,ylim=c(0,5000), breaks = 2)
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3,ylim=c(0,5000), breaks = 10000)
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3,ylim=c(0,5000), breaks = 1000)
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3,ylim=c(0,5000), breaks = 10)
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3,ylim=c(0,5000), breaks = 100)
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3,ylim=c(0,100), breaks = 100)
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3,ylim=c(0,10), breaks = 100)
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3,ylim=c(0,10), breaks = 110)
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3,ylim=c(0,10), breaks = 120)
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3,ylim=c(0,10), breaks = 200)
hist(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3,ylim=c(0,10), breaks = 100)
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3)
pubmed.density <- density(sp_pubmed_results.nz.lt20$V3, bw=.5)
plot(pubmed.density, main="Density of Non-Zero, Less Than 20 Pubmed")
polygon(pubmed.density, col="steelblue")
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3)
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3, type="n")
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3, type="h")
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3, type="h", ylim=c(0:100))
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3, type="h", ylim=c(0,100))
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3, type="h", ylim=c(0,100), col="steelblue")
lm(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ )
seq.int(nrow(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3))
nrow(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3)
View(sp_pubmed_results.nz)
seq.int(1,10201)
nrow(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ seq.int(1,10201))
lm(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ seq.int(1,10201))
abline(lm(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ seq.int(1,10201)))
abline(nlm(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ seq.int(1,10201)))
fit = glm(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ seq.int(1,10201)))
fit = glm(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ seq.int(1,10201))
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3, type="h", ylim=c(0,100), col="steelblue")
sp_pubmed_results.nz.fit <- glm(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ seq.int(1,10201))
sp_pubmed_results.nz.predict <- predict(fit, newdata=sp_pubmed_results.nz, type="response")
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ seq.int(1,10201))
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ seq.int(1,10201), type="h")
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ seq.int(1,10201), type="h", ylim=c(0,100), col="steelblue")
lines(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ seq.int(1,10201), col="black", lwd=2)
lines(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ seq.int(1,10201), sp_pubmed_results.nz.fit, col="black", lwd=2)
lines(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ seq.int(1,10201), data=sp_pubmed_results.nz.fit, col="black", lwd=2)
lines(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ seq.int(1,10201), data=sp_pubmed_results.nz, col="black", lwd=2)
sp_pubmed_results.nz.fit <- glm(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ seq.int(1,10201))
sp_pubmed_results.nz.predict <- predict(fit, newdata=sp_pubmed_results.nz, type="response")
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ seq.int(1,10201), type="h", ylim=c(0,100), col="steelblue")
lines(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ seq.int(1,10201), data=sp_pubmed_results.nz, col="black", lwd=2)
sp_pubmed_results.nz$predict <- predict(fit, newdata=sp_pubmed_results.nz, type="response")
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3 ~ seq.int(1,10201), type="h", ylim=c(0,100), col="steelblue")
lines(sp_pubmed_results.nz$predict ~ sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3, data=sp_pubmed_results.nz, col="black", lwd=2)
plot(sp_pubmed_results.nz$predict ~ sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3, type="h", ylim=c(0,100), col="steelblue")
lines(sp_pubmed_results.nz$predict ~ sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3, data=sp_pubmed_results.nz, col="black", lwd=2)
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3, type="h", ylim=c(0,100), col="steelblue")
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3, type="h", xlab="number hits", ylim=c(0,100), col="steelblue")
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3, type="h", ylab="number hits", ylim=c(0,100), col="steelblue")
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3, type="h", ylab="Number Hits", ylim=c(0,100), col="steelblue", main="number of pubmed hits")
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3, type="h", ylab="Number Hits", ylim=c(0,100), col="steelblue", main="Number of Pubmed Hits")
plot(sp_genome_results.nz[order(-sp_genome_results.nz$V3),]$V3)
plot(density(sp_genome_results.nz$V3))
plot(density(sp_pubmed_results.nz$V3), main="Density of Non-Zero, Genomes")
plot(density(sp_pubmed_results.nz$V3))
plot(density(sp_pubmed_results.nz$V3), main="Density of Non-zero genomes")
plot(density(sp_pubmed_results.nz$V3), main="Density of Non-zero Genomes")
plot(density(sp_pubmed_results.nz$V3), main="Density of Non-zero Genomes")
plot(density(sp_pubmed_results.nz$V3), main="Density of Non-Zero Genomes")
plot(density(sp_genome_results.nz$V3), main="Density of Non-Zero Genomes")
polygon(pubmed.density, col="steelred")
polygon(pubmed.density, col="steelgreen")
polygon(pubmed.density, col="#82b446")
polygon(density(sp_genome_results.nz$V3), col="#82b446")
plot(density(sp_genome_results.nz$V3), main="Density of Non-Zero Genomes")
polygon(density(sp_genome_results.nz$V3), col="#82b446")
order(-sp_pubmed_results.nz$V3),]$V3
sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3
sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]
install.packages("lemon")
library("lemon")
?lemon
lemon_print(sp_pubmed_results)
lemon_print(sp_pubmed_results)
vignette('lemon_print', package='lemon')
{r caption="Data frame is now printed using `kable`.",render=lemon_print}
head(sp_pubmed_results)
kable(head(sp_pubmed_results))
install.packages("kable")
{r normal_print,render=normal_print}
{r normal_print,render=normal_print}sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]
sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]
library(lattice)
#sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
#sp_google_results.nz <- sp_google_results[sp_google_results$V3!=0,]
sp_genome_results <- read.table("results_2_Insecta.txt", as.is=TRUE, header=FALSE)
sp_genome_results.nz <- sp_genome_results[sp_genome_results$V3!=0,]
plot(density(sp_genome_results.nz$V3), main="Density of Non-Zero Genomes")
polygon(density(sp_genome_results.nz$V3), col="#82b446")
plot(sp_genome_results.nz[order(-sp_genome_results.nz$V3),]$V3)
sp_pubmed_results <- read.table("results_3_Insecta.txt", as.is=TRUE, header=FALSE)
sp_pubmed_results.nz <- sp_pubmed_results[sp_pubmed_results$V3!=0,]
plot(density(sp_pubmed_results.nz$V3))
sp_pubmed_results.nz.lt20 <- sp_pubmed_results.nz[sp_pubmed_results.nz$V3<20,]
pubmed.density <- density(sp_pubmed_results.nz.lt20$V3, bw=.5)
plot(pubmed.density, main="Density of Non-Zero, Less Than 20 Pubmed")
polygon(pubmed.density, col="steelblue")
mean(sp_pubmed_results$V3)
mean(sp_pubmed_results[sp_pubmed_results$V3!=0,]$V3)
plot(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3, type="h", ylab="Number Hits", ylim=c(0,100), col="steelblue", main="Number of Pubmed Hits")
sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]
head(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),])
?head
head(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),], n=15L)
sum(sp_pubmed_results$V3)
sum(sp_pubmed_results$V3)-22144
22144/110482
sum(head(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),], n=15L)$V3)
88338/2
sum(head(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),], n=14L)$V3)
sum(head(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),], n=13L)$V3)
sum(head(sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),], n=12L)$V3)
ordered_sp_pubmed_results.nz <- sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]$V3
plot(ordered_sp_pubmed_results.nz, type="h", ylab="Number Hits", ylim=c(0,100), col="steelblue", main="Number of Pubmed Hits")
plot(ordered_sp_pubmed_results.nz, col= ifelse(ordered_sp_pubmed_results.nz >= 3, "red", "black"))
plot(ordered_sp_pubmed_results.nz, pch="2" , col= ifelse(ordered_sp_pubmed_results.nz >= 3, "red", "black"))
plot(ordered_sp_pubmed_results.nz, pch="16" , col= ifelse(ordered_sp_pubmed_results.nz >= 3, "red", "black"))
plot(ordered_sp_pubmed_results.nz, pch="16" , col= ifelse(ordered_sp_pubmed_results.nz >= 3, "steelblue", "#82b446"))
plot(ordered_sp_pubmed_results.nz, pch=16 , col= ifelse(ordered_sp_pubmed_results.nz$V1 %in% sp_genome_results.nz$V1, "steelblue", "#82b446"))
ordered_sp_pubmed_results.nz <- sp_pubmed_results.nz[order(-sp_pubmed_results.nz$V3),]
plot(ordered_sp_pubmed_results.nz$V3, pch=16 , col= ifelse(ordered_sp_pubmed_results.nz$V1 %in% sp_genome_results.nz$V1, "steelblue", "#82b446"))
plot(ordered_sp_pubmed_results.nz$V3, pch=16 , col= ifelse(ordered_sp_pubmed_results.nz$V1 %in% sp_genome_results.nz$V1 && ordered_sp_pubmed_results.nz$V2 %in% sp_genome_results.nz$V2, "steelblue", "#82b446"))
plot(ordered_sp_pubmed_results.nz$V3, pch=16 , col= ifelse(ordered_sp_pubmed_results.nz$V2 %in% sp_genome_results.nz$V2, "steelblue", "#82b446"))
plot(ordered_sp_pubmed_results.nz$V3, pch=16 , col= ifelse(ordered_sp_pubmed_results.nz$V2 %in% sp_genome_results.nz$V2, "steelblue", "#82b446"), main="Number of Pubmed Hits, Colored by Genome")
plot(ordered_sp_pubmed_results.nz$V3, pch=16 , col= ifelse(ordered_sp_pubmed_results.nz$V2 %in% sp_genome_results.nz$V2, "steelblue", "#82b446"), main="Number of Pubmed Hits, Colored by Genome", ylab="Number Hits")
devtools::install_github("naikai/sake")
devtools::install_github("naikai/sake@master")
githubinstall::gh_install_packages("naikai/sake")
