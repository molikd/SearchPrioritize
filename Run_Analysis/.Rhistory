install.pacakges("reutils")
install.packages("reutils")
??reutils
?egquery
library("reutils")
asn <- download.file("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=KU511222.1&complexity=3")
asn <- download.file("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=KU511222.1&complexity=3","KU511222.1",method="wget")
?reutils
IDs[i]
IDs <- c("KU511222.1")
IDs[1]
i=1
url <- c("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",IDs[i],"&complexity=3")
url <- paste(url,sep="")
urlUse <- paste(url,sep="")
urlUse
urlUse <- paste(url,  collapse="")
library(jsonlite)
jsonExample <- fromJSON(IDs[1])
library(yaml)
?yaml
yaml.load(IDs[1])
yaml <- yaml.load(IDs[1])
yamlExapmle <- yaml.load(IDs[1])
yamlExapmle <- yaml.load_file(IDs[1])
?fromJSON
library(jsonlite)
IDs <- c("KU511222.1")
FileList <- list()
for( i in length(IDs)){
url <- c("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",IDs[i],"&complexity=3&rettype=json&retmode=text")
url <- paste(url,  collapse="")
download.file(url,IDs[i],method="wget")
}
jsonLoadExample <- fromJSON(IDs[1])
efetch
?efetch
efetch(IDs,"nuccore")
efetch(IDs,"nuccore",rettype = "xml")
efetch(IDs,db="nuccore",retmode = "xml")
efetch(IDs,db="nuccore",retmode="text")
library(reutils)
IDs <- c("KU511222.1")
for( i in length(IDs)){
efetch(uid=IDs[i],db="nuccore",retmode="text",outfile = IDs[i])
}
for( i in length(IDs)){
efetch(uid=IDs[i],db="nuccore",retmode="text",outfile = IDs[i])
}
jsonLoadExample <- fromJSON(IDs[1])
library(reutils)
IDs <- c("KU511222.1")
for( i in length(IDs)){
efetch(uid=IDs[i],db="nuccore",retmode="text",outfile = IDs[i])
}
jsonLoadExample <- fromJSON(IDs[1])
i=1
efetch(uid=IDs[i],db="nuccore",retmode="text",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",retmode="xml",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",retmode="asn.1",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",retmode="text",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",rettype="text",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",rettype="docsum",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",rettype="acc",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",rettype="asn.1",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",rettype="asn",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",rettype="text",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",rettype="uilist",outfile = IDs[i])
efetch(uid=IDs[i],db="nuccore",outfile = IDs[i])
acc <- efetch(uid=IDs[i],db="nuccore",outfile = IDs[i])
for( i in length(IDs)){
url <- c("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",IDs[i],"&complexity=3&retmode=xml")
url <- paste(url,  collapse="")
download.file(url,IDs[i],method="wget")
}
?xml
library(xml)
xml(IDs[i])
xmlTreeParse(IDs[i])
library(XML)
xmlTreeParse(IDs[i])
exampleXML <- xmlTreeParse(IDs[i])
View(exampleXML)
exampleXML[["doc"]]
exampleXML[["doc"]]
library(xml2)
IDs <- c("KU511222.1")
FileList <- list()
for( i in length(IDs)){
url <- c("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",IDs[i],"&complexity=3&retmode=xml")
url <- paste(url,  collapse="")
download.file(url,IDs[i],method="wget")
}
?xml2
??xml2
xmlToList(XML)
XML <- xmlTreeParse(IDs[i])
xmlToList(XML)
xmlData <- xmlToList(file)
file <- xmlTreeParse(IDs[i])
xmlData <- xmlToList(file)
View(xmlData)
xmlData[[37]][["GBFeature"]][["GBFeature_quals"]]
xmlData[[37]][["GBFeature"]][["GBFeature_quals"]][[12]]
xmlData[[37]][["GBFeature"]][["GBFeature_quals"]]
xmlData[["GBFeature"]][["GBFeature_quals"]]
xmlData[[37]][["GBFeature"]][["GBFeature_quals"]]
xmlData[[37]][["GBFeature"]][["GBFeature_quals"]][[12]]
# Here is some code do download a list of acc as xml files
IDs <- c("AH005269")
for( i in length(IDs)){
url <- c("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",IDs[i],"&complexity=3&retmode=xml")
url <- paste(url,  collapse="")
download.file(url,IDs[i],method="wget")
}
# here is how you load an xml file and parse it into a list
file <- xmlTreeParse(IDs[1])
xmlData2 <- xmlToList(file)
# here is how you load an xml file and parse it into a list
file <- xmlTreeParse(IDs[1])
# here is how you load an xml file and parse it into a list
file <- xmlTreeParse(IDs[1])
# Here is some code do download a list of acc as xml files
IDs <- c("M80343.1")
for( i in length(IDs)){
url <- c("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",IDs[i],"&complexity=3&retmode=xml")
url <- paste(url,  collapse="")
download.file(url,IDs[i],method="wget")
}
# here is how you load an xml file and parse it into a list
file <- xmlTreeParse(IDs[1])
# this is the only external library I use
library(XML)
# Here is some code do download a list of acc as xml files
IDs <- c("M80343.1")
for( i in length(IDs)){
url <- c("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",IDs[i],"&complexity=3&retmode=xml")
url <- paste(url,  collapse="")
download.file(url,IDs[i],method="wget")
}
# here is how you load an xml file and parse it into a list
file <- xmlTreeParse(IDs[1])
xmlData2 <- xmlToList(file)
xmlData2 <- xmlToList(file)
XML::xpathSApply(file, "//LineageEx/Taxon/ScientificName", XML::xmlValue)
??xpathSApply
getNodeSet(file, "//LineageEx/Taxon/ScientificName", XML::xmlValue)
# this is the only external library I use
library(XML)
# Here is some code do download a list of acc as xml files
IDs <- c("M80343.1")
for( i in length(IDs)){
url <- c("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",IDs[i],"&complexity=3&retmode=xml")
url <- paste(url,  collapse="")
download.file(url,IDs[i],method="wget")
}
# here is how you load an xml file and parse it into a list
file <- xmlTreeParse(IDs[1])
getNodeSet(file, "//LineageEx/Taxon/ScientificName", XML::xmlValue)
# Here is some code do download a list of acc as xml files
IDs <- c("KU511222.1")
for( i in length(IDs)){
url <- c("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id=",IDs[i],"&complexity=3&retmode=xml")
url <- paste(url,  collapse="")
download.file(url,IDs[i],method="wget")
}
# here is how you load an xml file and parse it into a list
file <- xmlTreeParse(IDs[1])
getNodeSet(file, "//LineageEx/Taxon/ScientificName", XML::xmlValue)
?XMLDocument
??XMLDocument
source("http://bioconductor.org/biocLite.R")
biocLite(c("annotate", "AnnotationHub", "biomaRt", "DESeq2", "gage", "gageData", "GO.db", "pathview", "plotly", "DT"))
q()
mrpp
?mrpp
??mrppp
?deconstand
??deconstand
library(ggplot2)
??classify_emotion
??
simple_sentiment
??simple_sentiment
?simple_sentiment
??simple_sentiment
devtools::install_github("naikai/sake")
devtools::install_github("naikai/sake", force=TRUE)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2", version = "3.8")
source("http://bioconductor.org/biocLite.R")
biocLite(c("annotate", "AnnotationHub", "biomaRt", "DESeq2", "gage", "gageData", "GO.db", "pathview", "plotly", "DT"))
install.packages("devtools")
install.packages("lgit2")
install.packages("lgit2")
install.packages("devtools")
devtools::install_github("renozao/pkgmaker", ref="develop")
devtools::install_github("naikai/sake")
devtools::install_github("renozao/pkgmaker", ref="develop")
devtools::install_github("naikai/sake")
??github
?install_github
install_github("naikai/sake")
library("devtools")
install_github("naikai/sake")
cite(textrank)
cite("textrank")
cite(nmf)
cite("nmf")
citation("nmf")
citation("NMF")
?udpipe
??udpipe
citation("udpipe")
citation("textreuse")
citation("factoextra")
citation("NMF")
citation("NMF",bibtex=TRUE)
citation("tm")
toBibtex(citation("tm"))
toBibtex(citation("vegan"))
library("dada2")
install.packages("dada2")
install.packages("dada2")
library(plyr)
library(ggplot2)
library(wordcloud)
library(RColorBrewer)
library(SnowballC)
library(sentiment)
library(textreuse)
library(yyplot)
library("devtools")
install_github("https://github.com/GuangchuangYu/yyplot")
install.packages("ggtree")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
install.packages("ape")
library(basicPackages)
basicPackages::install.yyplot()
install.packages("basicPackages")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
install_github("https://github.com/GuangchuangYu/yyplot")
githubinstall::githubinstall("gglayer")
install_github("https://github.com/GuangchuangYu/gglayer")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
install_github("https://github.com/GuangchuangYu/gglayer")
install_github("https://github.com/GuangchuangYu/yyplot")
?install_github
install_github("https://github.com/GuangchuangYu/yyplot", force=T)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
install_github("https://github.com/GuangchuangYu/yyplot", force=T)
?pcd
??pdc
install.packages("pdc")
data("complex.shapes",package="pdc")
View(complex.shapes)
Atacama.otu <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
setwd("~/OneDrive - nd.edu/Code/SearchPrioritize/Run_Analysis")
Atacama.otu <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
Atacama.otu <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
Atacama.otu <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
Atacama.otu <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
Atacama.otu <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
Atacama.otu <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
Atacama.otu <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
sp_google_results <- read.table("results_1_Insecta.txt", as.is=TRUE, header=FALSE)
plot(sp_google_results[,3])
